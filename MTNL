import numpy as np
import pandas as pd
from sklearn.svm import SVR
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
x = pd.read_csv(r'mtnl3.csv',parse_dates=["Date"],index_col="Date")
x
df=x.drop(columns=['HIGH','LOW','OPEN','VOLUME'])
df
gdp = pd.read_csv(r'GDP2.csv',parse_dates=["Date"],index_col="Date")
inflation = pd.read_csv(r'inflation2.csv',parse_dates=["Date"],index_col="Date")
unem = pd.read_csv(r'unemrate.csv',parse_dates=["DATE"],index_col="DATE")
crr = pd.read_csv(r'CRR.csv',parse_dates=["Date"],index_col="Date")
gdp
inflation
unem
crr
df=df.join(gdp,how="left")
df.interpolate(method="linear",inplace=True,limit_direction="both")
df
df.columns = ['CLOSE','GDP']
df1=df.join(inflation,how="outer")
df
df1.interpolate(method="linear",inplace=True,limit_direction="both")
df1
df1.columns = ['CLOSE','GDP','Inflation']
df1
df2=df1.join(unem,how="outer")
df2
df2.interpolate(method="linear",inplace=True,limit_direction="both")
df2
df3=df2.join(crr,how="outer")
df3
df3.interpolate(method="linear",inplace=True,limit_direction='both')
df3
df3.columns = ["CLOSE","GDP","Inflation","uemp","crr"]
df3=df3["20001108":"20181125"]
df3
forecast_out = int(input("Enter Number Of Days")) 
df3['Prediction'] = df3[['CLOSE']].shift(-forecast_out)
X = np.array(df3.drop(['CLOSE','Prediction'],1))
X = X[:-forecast_out]
print(X)
y = np.array(df3['CLOSE'])
y = y[:-forecast_out]
print(y)
x_train, x_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
lr = LinearRegression()
lr.fit(x_train, y_train)
lrconfidence = lr.score(x_test, y_test)
print("lr confidence: ", lrconfidence)
x_forecast = np.array(df3.drop(['CLOSE','Prediction'],1))[-forecast_out:]
print(x_forecast)
lr_prediction = lr.predict(x_forecast)
print(lr_prediction)

svr_rbf = SVR(kernel='rbf', C=1e3, gamma=0.1) 
svr_rbf.fit(x_train, y_train)
svm_confidence = svr_rbf.score(x_test, y_test)
print("svm confidence: ", svm_confidence)
svm_prediction = svr_rbf.predict(x_forecast)
print(svm_prediction)

import matplotlib.pyplot as plt
import seaborn as sns
plt.figure(figsize=(10,10))
sns.heatmap(df3.corr(),annot=True)
